[tox]
env_list =
    check-{style,security}
    test{,-pyargs,-regtests,-devdeps}{,-cov}-xdist
    build-{dist,docs}

# tox environments are constructed with so-called 'factors' (or terms)
# separated by hyphens, e.g. test-devdeps-cov. Lines below starting with factor:
# will only take effect if that factor is included in the environment name. To
# see a list of example environments that can be run, along with a description,
# run:
#
#     tox -l -v
#

[testenv:check-style]
description = check code style, e.g. with flake8
skip_install = true
deps =
    ruff
commands =
    ruff . {posargs}

[testenv:check-security]
description = run bandit to check security compliance
deps =
    bandit>=1.7
commands =
    bandit romanisim -r -x tests,regtest

[testenv]
description =
    run tests
    devdeps: with the latest developer version of key dependencies
    oldestdeps: with the oldest supported version of key dependencies
    pyargs: with --pyargs on installed package
    warnings: treating warnings as errors
    regtests: with --bigdata and --slow flags
    cov: with coverage
    xdist: using parallel processing
pass_env =
    HOME
    CI
    TOXENV
    CRDS_*
    TEST_BIGDATA
    CODECOV_*
    WEBBPSF_PATH
    GALSIM_CAT_PATH
extras =
    test
deps =
    xdist: pytest-xdist
    devdeps: -rrequirements-dev.txt
    oldestdeps: minimum_dependencies
commands_pre =
    oldestdeps: minimum_dependencies romanisim --filename requirements-min.txt
    oldestdeps: pip install -r requirements-min.txt
    pip freeze
commands =
    pip freeze
    pytest \
    cov: --cov=romanisim --cov-config=pyproject.toml --cov-report=term-missing --cov-report=xml \
    warnings: -W error \
    regtests: --bigdata --slow --basetemp={homedir}/test_outputs \
    xdist: -n auto \
    {posargs}

[testenv:pyargs]
changedir = {homedir}
usedevelop = false
commands =
    pyargs: pytest {project_root}/docs --pyargs {posargs:romanisim}
    
[testenv:build-dist]
description = check build sdist/wheel
skip_install = true
deps =
    build
commands =
    python -m build .

[testenv:build-docs]
description = invoke sphinx-build to build the HTML docs
extras = docs
commands =
    sphinx-build -W docs/source build/docs
