[tox]
envlist =
    check-{style,security}
    test{,-pyargs,-regtests,-devdeps}-xdist
    test-numpy{120,121,122}
    test-cov
    build-{twine,docs}
isolated_build = true
usedevelop = true

# tox environments are constructed with so-called 'factors' (or terms)
# separated by hyphens, e.g. test-pyargs-cov. Lines below starting with factor:
# will only take effect if that factor is included in the environment name. To
# see a list of example environments that can be run, along with a description,
# run:
#
#     tox -l -v
#

[testenv:check-style]
description = check code style, e.g. with flake8
skip_install = true
deps =
    flake8
commands =
    flake8 --count . {posargs}

[testenv:check-security]
description = run bandit to check security compliance
deps =
    bandit>=1.7
commands =
    bandit -r -ll romanisim

[testenv]
description =
    run tests
    devdeps: with the latest developer version of key dependencies
    pyargs: with --pyargs on installed package
    warnings: treating warnings as errors
    regtests: with --bigdata and --slow flags
    numpy120: with numpy `1.20.*`
    numpy121: with numpy `1.21.*`
    numpy122: with numpy `1.22.*`
    cov: with coverage
    xdist: using parallel processing
# The following indicates which extras_require from setup.cfg will be installed
extras =
    test
# Pass through the following environment variables which may be needed for the CI
passenv =
    HOME
    CI
    TOXENV
    CRDS_*
    TEST_BIGDATA
    CODECOV_*
usedevelop = true
commands =
    pip freeze
    pytest \
    cov: --cov=romanisim --cov-config=pyproject.toml --cov-report=term-missing --cov-report=xml \
    warnings: -W error \
    regtests: --bigdata --slow --basetemp={homedir}/test_outputs \
    xdist: -n auto \
    {posargs}
deps =
    xdist: pytest-xdist
    devdeps: -rrequirements-dev.txt
    numpy120: numpy==1.20.*
    numpy121: numpy==1.21.*
    numpy122: numpy==1.22.*
commands_pre =
    python -m pip install --upgrade pip
# Don't treat positional arguments passed to tox as file system paths
args_are_paths = false

[testenv:pyargs]
changedir = {homedir}
usedevelop = false
commands =
    pyargs: pytest {toxinidir}/docs --pyargs {posargs:romancal}

[testenv:build-twine]
description = check that the package builds sdist/wheel and that twine uploads
deps =
    twine>=3.3
    pep517
usedevelop = false
commands =
    python -m pep517.check .
    twine check --strict {distdir}/*

[testenv:build-docs]
description = invoke sphinx-build to build the HTML docs
extras = docs
commands =
    sphinx-build -W docs/source build/docs
