[tox]
env_list =
    py3{,11,12}{,-pyargs,-regtests,-devdeps,-oldestdeps}{,-cov}{,-xdist}

[testenv:check-style]
description = check code style, e.g. with flake8
skip_install = true
deps =
    ruff
commands =
    ruff check . {posargs}

[testenv]
description =
    run tests
    devdeps: with the latest developer version of key dependencies
    oldestdeps: with the oldest supported version of key dependencies
    pyargs: with --pyargs on installed package
    warnings: treating warnings as errors
    regtests: with --bigdata and --slow flags
    cov: with coverage
    xdist: using parallel processing
use_develop = true
pass_env =
    HOME
    CI
    TOXENV
    CRDS_*
    TEST_BIGDATA
    CODECOV_*
    STPSF_PATH
    GALSIM_CAT_PATH
    FFTW_DIR
    LIBRARY_PATH
extras =
    test
deps =
    xdist: pytest-xdist
    oldestdeps: minimum_dependencies
commands_pre =
    oldestdeps: minimum_dependencies romanisim --filename requirements-min.txt
    oldestdeps: pip install -r requirements-min.txt
    devdeps: pip install -r requirements-dev.txt -U --upgrade-strategy eager
    pip freeze
commands =
    pip freeze
    pytest \
    cov: --cov=romanisim --cov-config=pyproject.toml --cov-report=term-missing --cov-report=xml \
    warnings: -W error \
    regtests: --bigdata --slow --basetemp={homedir}/test_outputs \
    xdist: -n auto \
    {posargs}

[testenv:pyargs]
changedir = {homedir}
usedevelop = false
commands =
    pyargs: pytest {project_root}/docs --pyargs {posargs:romanisim}
