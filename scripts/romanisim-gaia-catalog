#!/usr/bin/env python

from astropy.time import Time
from romanisim import gaia
import romanisim.parameters, romanisim.bandpass
try:
    from astroquery.gaia import Gaia
except ModuleNotFoundError:
    raise ModuleNotFoundError('This script requires astroquery, which is '
                              'not otherwise a romanisim requirement.')


if __name__ == '__main__':
    import argparse
    parser = argparse.ArgumentParser(
        description='Generate a romanisim input catalog from Gaia.',
        epilog='EXAMPLE: %(prog)s 270.0 66.0 2026-01-01T00:00:00 gaia.ecsv',
        formatter_class=argparse.ArgumentDefaultsHelpFormatter)
    parser.add_argument('ra', type=float, help='right ascension (degree)')
    parser.add_argument('dec', type=float, help='declination (degree)')
    parser.add_argument('time', type=str, help='time (ISO 8601)')
    parser.add_argument('filename', type=str, help='output catalog')
    parser.add_argument('--radius', type=float,
                        help='find sources within this radius of query')

    args = parser.parse_args()

    ra, dec, radius = args.ra, args.dec, args.radius
    time = Time(args.time, format='isot')
    q = ('select * from gaiadr3.gaia_source where '
         f'distance({ra}, {dec}, ra, dec) < {radius}')
    job = Gaia.launch_job_async(q)
    r = job.get_results()
    fluxfields = set(romanisim.bandpass.galsim2roman_bandpass.values())
    cat = gaia.gaia2romanisimcat(r, time, fluxfields=fluxfields)
    cat.write(args.filename, overwrite=True) 
